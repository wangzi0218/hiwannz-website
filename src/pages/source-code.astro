---
import MainLayout from '../layouts/MainLayout.astro';
import { ExternalLink, Github } from 'lucide-react';

// 页面元数据
const pageTitle = "Source Code | Wannz";
const pageDescription = "I've open-sourced my personal introduction website as a front-end project on GitHub. This project not only documents my growth and experiences but also aims to provide some insights and inspiration for other developers. Open-sourcing is about sharing and progressing together. I look forward to connecting with more like-minded individuals.";
const pageImage = "/images/source-code-og.jpg"; // 社交媒体分享图片
---

<MainLayout 
  title={pageTitle}
  description={pageDescription}
  image={pageImage}
>
  <section class="pt-32 pb-20 px-4">
    <div class="container mx-auto">
      <h1 class="h1 mb-8 animate-fade-up" data-i18n-key="sourceCode.title"></h1>
      
      <p class="text-lg text-muted-foreground mb-16 animate-fade-up animate-delay-100" data-i18n-key="sourceCode.description"></p>
     
    <div class="space-y-8">
      <section>
        <h2 class="text-xl font-semibold mb-4" data-i18n-key="sourceCode.about.title"></h2>
        <p class="text-gray-700 leading-relaxed" data-i18n-key="sourceCode.about.content"></p>
      </section>
      
      <section>
        <h2 class="text-xl font-semibold mb-4" data-i18n-key="sourceCode.techStack.title"></h2>
        <ul class="list-disc list-inside space-y-2 text-gray-700">
          <li><span class="font-medium" data-i18n-key="sourceCode.techStack.framework"></span>Astro</li>
          <li><span class="font-medium" data-i18n-key="sourceCode.techStack.styling"></span>TailwindCSS</li>
          <li><span class="font-medium" data-i18n-key="sourceCode.techStack.icons"></span>Lucide</li>
          <li><span class="font-medium" data-i18n-key="sourceCode.techStack.components"></span>shadcn/ui</li>
          <li><span class="font-medium" data-i18n-key="sourceCode.techStack.content"></span>Markdown + Astro Content Collections</li>
          <li><span class="font-medium" data-i18n-key="sourceCode.techStack.i18n"></span>Customized i18n Solution</li>
        </ul>
      </section>
      
      <section class="bg-gray-50 p-6 rounded-lg border border-gray-100 shadow-sm">
        <div class="flex items-center gap-3 mb-4">
          <Github className="w-6 h-6" />
          <h2 class="text-xl font-semibold" data-i18n-key="sourceCode.repository.title"></h2>
        </div>
        
        <p class="text-gray-700 mb-4" data-i18n-key="sourceCode.repository.description"></p>
        
        <a 
          href="https://github.com/wangzi0218/hiwannz-minimalist-website" 
          target="_blank" 
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-4 py-2 bg-black text-white rounded-md hover:bg-gray-800 transition-colors"
        >
          <span data-i18n-key="sourceCode.repository.button"></span>
          <ExternalLink className="w-4 h-4" />
        </a>
      </section>
      
      <section>
        <h2 class="text-xl font-semibold mb-4" data-i18n-key="sourceCode.license.title"></h2>
        <p class="text-gray-700 leading-relaxed" data-i18n-key="sourceCode.license.content"></p>
      </section>
    </div>
    </div>
  </section>
</MainLayout>

<style>
  .animate-fade-up {
    animation: fadeUp 0.8s ease-in-out;
  }
  
  .animate-delay-100 {
    animation-delay: 0.1s;
  }
  
  @keyframes fadeUp {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>

<script>
  // 使用优化的国际化客户端脚本
  import { initI18n, translateSync, getCurrentLanguage } from '../scripts/i18n-client';
  
  // 更新页面内容
  function updatePageContent() {
    const elements = document.querySelectorAll('[data-i18n-key]');
    const currentLang = getCurrentLanguage();
    
    elements.forEach(el => {
      const key = el.getAttribute('data-i18n-key');
      if (key) {
        el.textContent = translateSync(key, currentLang);
      }
    });
  }
  
  // 页面加载完成后初始化国际化
  document.addEventListener('DOMContentLoaded', () => {
    // 初始化国际化并在加载完成后更新页面内容
    initI18n().then(() => {
      updatePageContent();
    });
    
    // 监听语言变化事件
    document.addEventListener('languageChanged', () => {
      updatePageContent();
    });
  });
</script>
