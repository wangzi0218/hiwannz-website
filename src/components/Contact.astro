---
import { Mail, Send, Phone, MapPin } from 'lucide-react';

// 联系信息
const contactInfo = [
  {
    icon: Mail,
    title: "Email",
    value: "hello@example.com",
    link: "mailto:hello@example.com"
  },
  {
    icon: Phone,
    title: "Phone",
    value: "+1 (555) 123-4567",
    link: "tel:+15551234567"
  },
  {
    icon: MapPin,
    title: "Location",
    value: "Shanghai, China",
    link: "https://maps.google.com/?q=Shanghai,China"
  }
];
---

<section id="contact" class="py-20">
  <div class="container mx-auto px-4">
    <div class="max-w-5xl mx-auto">
      <h2 class="h2 mb-8">Get in Touch</h2>
      
      <div class="grid grid-cols-1 lg:grid-cols-12 gap-12">
        <!-- 联系表单 -->
        <div class="lg:col-span-7">
          <div class="bg-card border border-border rounded-lg p-6 md:p-8">
            <h3 class="text-xl font-medium mb-6">Send me a message</h3>
            
            <form id="contact-form" class="space-y-6">
              <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                <div class="space-y-2">
                  <label for="name" class="text-sm font-medium">Name</label>
                  <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    required
                    class="w-full px-4 py-2 bg-background border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary transition-colors"
                  />
                </div>
                
                <div class="space-y-2">
                  <label for="email" class="text-sm font-medium">Email</label>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required
                    class="w-full px-4 py-2 bg-background border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary transition-colors"
                  />
                </div>
              </div>
              
              <div class="space-y-2">
                <label for="subject" class="text-sm font-medium">Subject</label>
                <input 
                  type="text" 
                  id="subject" 
                  name="subject" 
                  required
                  class="w-full px-4 py-2 bg-background border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary transition-colors"
                />
              </div>
              
              <div class="space-y-2">
                <label for="message" class="text-sm font-medium">Message</label>
                <textarea 
                  id="message" 
                  name="message" 
                  rows="5" 
                  required
                  class="w-full px-4 py-2 bg-background border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary transition-colors resize-none"
                ></textarea>
              </div>
              
              <button 
                type="submit"
                class="inline-flex items-center gap-2 px-6 py-3 bg-primary text-primary-foreground rounded-md font-medium transition-all hover:opacity-90"
              >
                Send Message
                <Send class="h-4 w-4" />
              </button>
              
              <div id="form-status" class="hidden"></div>
            </form>
          </div>
        </div>
        
        <!-- 联系信息 -->
        <div class="lg:col-span-5">
          <div class="bg-card border border-border rounded-lg p-6 md:p-8 h-full">
            <h3 class="text-xl font-medium mb-6">Contact Information</h3>
            
            <div class="space-y-6 mb-8">
              {contactInfo.map(item => (
                <div class="flex items-start gap-4">
                  <div class="p-3 bg-primary/10 text-primary rounded-full">
                    <item.icon class="h-5 w-5" />
                  </div>
                  <div>
                    <h4 class="text-sm font-medium">{item.title}</h4>
                    <a 
                      href={item.link} 
                      class="text-muted-foreground hover:text-primary transition-colors"
                      target={item.title === "Location" ? "_blank" : "_self"}
                      rel={item.title === "Location" ? "noopener noreferrer" : ""}
                    >
                      {item.value}
                    </a>
                  </div>
                </div>
              ))}
            </div>
            
            <div>
              <h4 class="text-sm font-medium mb-4">Follow me</h4>
              <div class="flex gap-4">
                <a 
                  href="https://github.com/username" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="p-2 bg-secondary hover:bg-secondary/80 text-secondary-foreground rounded-full transition-colors"
                  aria-label="GitHub"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-github"><path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"></path><path d="M9 18c-4.51 2-5-2-7-2"></path></svg>
                </a>
                <a 
                  href="https://twitter.com/username" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="p-2 bg-secondary hover:bg-secondary/80 text-secondary-foreground rounded-full transition-colors"
                  aria-label="Twitter"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-twitter"><path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"></path></svg>
                </a>
                <a 
                  href="https://linkedin.com/in/username" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="p-2 bg-secondary hover:bg-secondary/80 text-secondary-foreground rounded-full transition-colors"
                  aria-label="LinkedIn"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-linkedin"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect width="4" height="12" x="2" y="9"></rect><circle cx="4" cy="4" r="2"></circle></svg>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // 表单提交处理
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const formStatus = document.getElementById('form-status');
    
    if (form && formStatus) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // 显示加载状态
        formStatus.textContent = 'Sending message...';
        formStatus.className = 'mt-4 py-2 px-4 bg-secondary text-secondary-foreground rounded-md';
        
        // 在实际应用中，这里应该将表单数据发送到服务器
        // 这里我们模拟一个成功的提交
        try {
          // 模拟网络请求
          await new Promise(resolve => setTimeout(resolve, 1500));
          
          // 显示成功消息
          formStatus.textContent = 'Message sent successfully! I will get back to you soon.';
          formStatus.className = 'mt-4 py-2 px-4 bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 rounded-md';
          
          // 重置表单
          form.reset();
          
          // 5秒后隐藏状态消息
          setTimeout(() => {
            formStatus.className = 'hidden';
          }, 5000);
        } catch (error) {
          // 显示错误消息
          formStatus.textContent = 'There was an error sending your message. Please try again.';
          formStatus.className = 'mt-4 py-2 px-4 bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 rounded-md';
        }
      });
    }
  });
</script>
